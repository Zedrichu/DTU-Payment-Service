    // aggregate/ User (aggregate) -> UserId (aggregate root)
    //                             -> Address (city, street, country)
    //                             -> Contact (phone, email, street)

    // aggregate/ Report (aggregated) -> TransactionId (aggregate root)

	// Report - customerId, token, amount, merchantId, customerBank, merchantBank, description
	// -> Token (aggregate root)
	// repo.save(report)
	// return report.getId() -> Token

	// manager: all fields -> Set<Report>
	// customer: <amount, merchantId, token, description> with filter <customerId> on report
	// merchant: <amount, token, description> with filter <merchantId> on report
	// others: <customerId, customerBank, merchantBank>

	// Report (aggregate) -> ReportId(token), CustomerView(...), MerchantView(...), HiddenView(...)
	// Report repository:
	// 		Set <CustomerView> customerReportsByCustomerId(ReportId, String customerId)
	// 		Set <MerchantView> merchantReportsByMerchantId(ReportId, String merchantId)